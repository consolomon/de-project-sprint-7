Этот файл для вопросов и комментариев ревьювера и студента

- Исправил обязательны пункты
- По поводу определения домашнего города: хоть мой вариант строго говоря не соответствует заданию, но чисто практически он проще и тоже вполне рабочий, поскольку отрезок времени большой и вероятность аномального выброса в много сообщений от пользователя в недомашнем городе очень низкая.

Вопрос: Наверно можно было просто сделать кроссджойн и размножить каждый город на каждую строку таблицы источника.
Ответ: Кроссджойн работает очень медленно, и кластер ругается, что не будет работать так долго.
Также кроссджойн не избавляет от создания дублей из зеркальных пар значений:
+---------------------+
|user      | co_user  |
+----------|----------+
|user_1    |co_user_1 |
|user_2    |co_user_2 |
|co_user_1 | user_1   |
|co_user_2 | user_2   | 
Из-за этого я отказался от кроссджойна в том числе в скрипте friend_offers.py


Вопрос: Также ты записываешь результат методом append, это значит каждый новый расчет будет положен новым файлом рядом со старыми. Получается если посчитать витрину для четырех недель, данные за месяц будут дублироваться.
Ответ: Согласен, исправил
 
 
Вопрос: Мне кажется удобнее было бы получить группирующий признак по дате совершения события. С помощью функции trunc можно получить дату начала недели и месяца и группировать данные по ним.
Ответ: Не понял, что ты имеешь в виду. Я понимаю суть проблемы: первые и последние дни месяцев часто не совпадают с первым и последнем днём недели, т.е. недели и месяцы не синхронизированы. Поэтому либо нужно писать 2 отдельных датасета по месяцам и неделям либо выбрать разделение по 1 из параметров. Подправил на сохранение по 2-ум партициям: месяцу и неделе.


Вопрос: Уточни, пожалуйста, почему мы фильтруем по расстоянию в 5 км?
Ответ: Когда тестрировал скрипт, у меня не находило людей по остальным критериям с расстоянием до 1 км, поэтому поставил 5, а обратно не исправил)
